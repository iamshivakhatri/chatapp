npm i drizzle-orm
npm i @neondatabase/serverless
npm install drizzle-kit
npm install pg
npm install tsx --save-dev

To generate the schema:  npx drizzle-kit generate
To push the schema: npx drizzle-kit push
To see the studio :  npx drizzle-kit studio

npm install react-dropzone

edited bucket policy and cors on aws

aws sdk npm i aws-sdk

aws secret key
1. search for IAM 
2. create a user
don't provide user access
attach policy directly
check on box for amazon s3 full access
3. Enter the user
4. enter the security credentials
5. create an access key
choose local code

npm install @pinecone-database/pinecone

npm install langchain
npm install @langchain/community
npm i @langchain/commu
nity pdf-parse -> right one
npm i openai-edge
npm install md5
npm install ai
npm install @ai-sdk/openai


Integrating the stripe( it is actually easy)

install stripe
npm i stripe
create stripe app in the account
copy stripe secret key
create secret  api like api/stripe

once api/stripe/route.ts and stripe.ts are coded, create a webhook folder inside the api

just copy paste the webhook route.ts and change for database portion accordingly
change in the middleware

go to webhook section in stripe and do test in local environment

and follow instruction. download stripe cli, do login and listen to forward event to your webhook

and after connecting it then you run this command stripe listen --forward-to localhost:3000/api/webhook

and after that just copy the signing secret with webhook starting with whsec_.... and paste it in .environment
STRIPE_WEBHOOK_SIGNING_SECRET=whsec_
and replace that webhook secret here at the event in webhook route event = stripe.webhooks.constructEvent(body, signature, process.env.STRIPE_WEBHOOK_SIGNING_SECRET as string);
looks simple


